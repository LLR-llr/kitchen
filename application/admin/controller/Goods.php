<?php
/**
 * Created by PhpStorm.
 * User: asus
 * Date: 2019/10/11
 * Time: 11:08
 */

namespace app\admin\controller;

use think\Controller;
use think\Db;

class Goods extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function openinsert()
    {
        $cate = Db::table('category')->order('cid', 'asc')->select();
        $this->assign('cates', $cate);//挂载变量
        return $this->fetch();
    }

    public function insert()
    {
//        $method = $this->request->method();
        if (!$this->request->isPost()) {
            return json([
                'code' => 404,
                'msg' => '请求方式错误'
            ]);
        }
        $data = input('post.');
        //验证规则
        $validate = validate('Goods');
        if (!$validate->check($data)) {
            return json([
                'code' => 404,
                'msg' => $validate->getError()
            ]);
        };
        $data['create_time'] = date('Y-m-d H:i:s');
        $result = Db::table('goods')->insert($data);
        if ($result > 0) {
            return json([
                'code' => 200,
                'msg' => '插入成功'
            ]);
        } else {
            return json([
                'code' => 404,
                'msg' => '插入失败'
            ]);
        }
    }

    public function update()
    {
//        $method = $this->request->method();
        if (!$this->request->isPost()) {
            return json([
                'code' => 404,
                'msg' => '请求方式错误'
            ]);
        }
        $data = input('post.');
        //验证规则
        $validate = validate('Goods');
        if (!$validate->check($data)) {
            return json([
                'code' => 404,
                'msg' => $validate->getError()
            ]);
        };
        $data['create_time'] = date('Y-m-d H:i:s');
        $result = Db::table('goods')->insert($data);
        if ($result > 0) {
            return json([
                'code' => 200,
                'msg' => '插入成功'
            ]);
        } else {
            return json([
                'code' => 404,
                'msg' => '插入失败'
            ]);
        }
    }

    public function delete()
    {
//        $method = $this->request->method();
        if (!$this->request->isPost()) {
            return json([
                'code' => 404,
                'msg' => '请求方式错误'
            ]);
        }
        $data = input('post.');
        $id=$data['id'];
        $result = Db::table('goods')->where('gid',$id)->delete();
        if ($result>0) {
            return json([
                'code' => 200,
                'msg' => '删除成功'
            ]);
        } else {
            return json([
                'code' => 404,
                'msg' => '删除失败'
            ]);
        }
    }

    public function openupdate()
    {
        $data = input('get.');
        $id=$data['id'];
        $result = Db::table('goods')->where('gid',$id)->select($data);
        $arr=explode(',',$result[0]['banner']);
        $this->assign('arr',$arr);
        $this->assign('result',$result);
        return $this->fetch();
    }

    public function index()
    {
        $cate=Db::table('category')->select();
        $this->assign('cate',$cate);
        return $this->fetch();
    }
    public function query(){
        //数据总数  当前这一页的数据
        // select * from goods where order by gid asc limit 开始位置,3;

        $qs=$this->request->get();
        $where=[];
        if(isset($qs['gname'])){
            $where['name']=['like','%'.$qs['gname'].'%'];
        }
        if(isset($qs['cid'])&&!empty($qs['cid'])){
            $where['cid']=$qs['cid'];
        }
        if(isset($qs['price_min'])&&!empty($qs['price_min'])&&isset($qs['price_max'])&&!empty($qs['price_max'])&&$qs['price_min']<$qs['price_max']){
                $where['sale'] = ['between', [$qs['price_min'],$qs['price_max']]];
        }
        $page=$qs['page'];
        $limit=$qs['limit'];
        $offset=($page-1)*$limit;
        $count=Db::table('goods')->where($where)->count();

        $data=Db::table('goods')->where($where)->limit($offset,$limit)->select();

        return json([
            'code'=>0,
            'msg'=>'数据获取成功',
            'data'=>$data,
            'count'=>$count
        ]);
    }
}
