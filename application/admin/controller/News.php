<?php
/**
 * Created by PhpStorm.
 * User: asus
 * Date: 2019/10/26
 * Time: 12:56
 */

namespace app\admin\controller;


use think\Db;

class news extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function openinsert()
    {

        $news = Db::table('news')->order('id', 'asc')->select();
        $this->assign('nres', $news);//挂载变量
        return $this->fetch();
    }

    public function insert()
{
//        $method = $this->request->method();
    if (!$this->request->isPost()) {
        return json([
            'code' => 404,
            'msg' => '请求方式错误'
        ]);
    }
    $data = input('post.');
    //验证规则
    $validate = validate('News');
    if (!$validate->check($data)) {
        return json([
            'code' => 404,
            'msg' => $validate->getError()
        ]);
    };
    $data['wdate'] = date('Y-m-d H:i:s');
    $result = Db::table('news')->insert($data);
    if ($result > 0) {
        return json([
            'code' => 200,
            'msg' => '插入成功'
        ]);
    } else {
        return json([
            'code' => 404,
            'msg' => '插入失败'
        ]);
    }
}
    public function update()
    {
//        $method = $this->request->method();
        if (!$this->request->isPost()) {
            return json([
                'code' => 404,
                'msg' => '请求方式错误'
            ]);
        }
        $data = input('post.');

        //验证规则
        $validate = validate('News');
        if (!$validate->check($data)) {
            return json([
                'code' => 404,
                'msg' => $validate->getError()
            ]);
        };
        $data['wdate'] = date('Y-m-d H:i:s');

        $result = Db::table('news')->where('id',$data['id'])->update($data);
        if ($result > 0) {
            return json([
                'code' => 200,
                'msg' => '更新成功'
            ]);
        } else {
            return json([
                'code' => 404,
                'msg' => '更新失败'
            ]);
        }
    }

    public function delete()
    {
//        $method = $this->request->method();
        if (!$this->request->isPost()) {
            return json([
                'code' => 404,
                'msg' => '请求方式错误'
            ]);
        }
        $data = input('post.');
        //验证规则
        $id=$data['id'];
        $result = Db::table('news')->where('id',$id)->delete();
        if ($result > 0) {
            return json([
                'code' => 200,
                'msg' => '删除成功'
            ]);
        } else {
            return json([
                'code' => 404,
                'msg' => '删除失败'
            ]);
        }
    }


    public function index()
    {
        $news=Db::table('news')->select();
        $this->assign('news',$news);
        return $this->fetch();
    }
    public function openupdate()
    {
        $data=input('get.');
        $id=$data['id'];
        $news=Db::table('news')->where('id',$id)->select();
        $this->assign('news',$news);
        return $this->fetch();
    }
    public function query()
    {
        //数据总数  当前这一页的数据
        // select * from goods where order by gid asc limit 开始位置,3;

        $qs = $this->request->get();
        $where = [];
        if (isset($qs['wcontent'])) {
            $where['wcontent'] = ['like', '%' . $qs['wcontent'] . '%'];
        }
        $page = $qs['page'];
        $limit = $qs['limit'];
        $offset = ($page - 1) * $limit;
        $count = Db::table('news')->where($where)->count();

        $data = Db::table('news')->where($where)->limit($offset, $limit)->select();

        return json([
            'code' => 0,
            'msg' => '数据获取成功',
            'data' => $data,
            'count' => $count
        ]);
    }
}
