<?php
/**
 * Created by PhpStorm.
 * User: asus
 * Date: 2019/10/9
 * Time: 9:43
 */

namespace app\admin\controller;

use think\Controller;
use think\Db;

class Nav extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index(){
        //查看  导航
//        return $this->fetch();
        return view();
    }
    public function openinsert(){
        //开页面
        return view();
    }
    public function insert(){
        //插入 导航
        //权限  请求方式  请求参数
//        $method = request();
        $method=$this->request->method();
        if($method!='POST'){
            return json([
                'code'=>404,
                'msg'=>'请求方式错误'
            ]);
        }
        $data=input('post.');
        //验证规则
        $validate=validate('Nav');
        if(!$validate->scene('insert')->check($data)){
            return json([
                'code'=>404,
                'msg'=>$validate->getError()
            ]);
        };
        $result=Db::table('nav')->insert($data);
        if($result>0){
            return json([
                'code'=>200,
                'msg'=>'插入成功'
            ]);
        }else{
            return json([
                'code'=>404,
                'msg'=>'插入失败'
            ]);
        }
    }

    public function query(){
        $data=Db::table('nav')->select();
        $count=Db::table('nav')->count();
        return json([
            'code'=>0,
            'msg'=>'success',
            'data'=>$data,
            'count'=>$count
        ]);
    }

    public function delete(){
        $method=$this->request->method();
        if($method!='POST'){
            return json([
                'code'=>404,
                'msg'=>'请求方式错误'
            ]);
        }
        $data=input('post.');
        //验证规则
        $dat=$data['id'];
        $validate=validate('Nav');
//        $validate->scene('edit', ['id']);
        if(!$validate->scene('del')->check($data)){
            return json([
                'code'=>404,
                'msg'=>$validate->getError()
            ]);
        };
        $result=Db::table('nav')->where('id',$dat)->delete();
        if($result>0){
            return json([
                'code'=>200,
                'msg'=>'删除成功'
            ]);
        }else{
            return json([
                'code'=>404,
                'msg'=>'删除失败'
            ]);
        }
    }
    public function openupdate(){
        return view();
    }
    public function update(){
        $method=$this->request->method();
        if($method!='POST'){
            return json([
                'code'=>404,
                'msg'=>'请求方式错误'
            ]);
        }
        $data=input('post.');
        //验证规则
        $validate=validate('Nav');
        if(!$validate->scene('update')->check($data)){
            return json([
                'code'=>404,
                'msg'=>$validate->getError()
            ]);
        };
        $dat=$data['id'];
        $result=Db::table('nav')->where('id',$dat)->update([$data['field']=>$data['value']]);
        if($result>0){
            return json([
                'code'=>200,
                'msg'=>'更新成功'
            ]);
        }else{
            return json([
                'code'=>404,
                'msg'=>'更新失败'
            ]);
        }
    }
}